import e from"fs";import t from"readline";function r(e){return e.trim().split(/\s+/)}function n(e,t){r(e).forEach((e=>t.add(e)))}function o(e,t){r(e).forEach((e=>{try{let r=parseInt(e.slice(1));t.add(r)}catch(t){console.error(`Error al convertir ${e} a entero: ${t}`)}}))}function s(e,t){r(e).forEach((e=>{try{let r=parseInt(e.slice(1));t.add(r)}catch(t){console.error(`Error al convertir ${e} a entero: ${t}`)}}))}function a(e){return r(e).slice(2).filter((e=>"+"!==e&&"/"!==e))}function i(e,t){return`( ${e} + ${t} )`}function f(e){let t=new Map;return e.forEach((e=>{try{let[r,n]=e.split("X");r="/"!==r?r:"λ",n=parseInt(n),t.has(n)?t.set(n,i(t.get(n),r)):t.set(n,r)}catch(t){console.error(`Error al procesar ${e}: ${t}`)}})),t}function l(e,t,r){let n=t[e];if(!n.has(e)||""===n.get(e))return;let o=`(${n.get(e)})*`;if(n.delete(e),0===n.size)n.set(r,o);else for(let e of n.keys())n.set(e,o+n.get(e));t[e]=n,function(e,t){console.log(`X${t}:`);for(let[t,r]of e.entries())console.log(`${t} => ${r}`)}(t[e],e)}function c(e,t){return t.has(e)}function u(e,t){return t.has(e)}function d(e,t,r,n,o){let s=r[e],a=r[t],f=s.get(t);s.delete(t);for(let[e,t]of a.entries())s.has(e)?s.set(e,i(f+t,s.get(e))):s.set(e,f+t);o.has(e)?2===s.size&&s.has(e)&&(s.set(n,s.get(e)+"*"),s.delete(e)):1===s.size&&s.has(e)&&(s.set(n,s.get(e)+"*"),s.delete(e)),r[e]=s}function h(e,t,r,n,o,s,a){r.add(t);for(let i of Array.from(e.keys()))c(i,s)||u(i,r)||(h(n[i],i,r,n,o,s,a),d(t,i,n,o,a));return e.has(t)&&l(t,n,o),r.delete(t),e}let p=new Set,$=new Set,m=new Set,g=new Set,y=new Set,E=[];async function w(r){let i="";const l=e=>{i+=e+"\n"};if(!r)return l("No filename provided"),i;let c=1;const u=t.createInterface({input:e.createReadStream(r),output:process.stdout,terminal:!1});for await(const e of u){const t=e.trim();if(1===c)n(t,p),l("Alfabeto: "+Array.from(p).join(" "));else if(2===c)o(t,$),l("Estados: "+Array.from($).join(" "));else if(3===c)s(t,m),l("Estados válidos: "+Array.from(m).join(" "));else{let e=f(a(t));m.has(c-4)&&e.set(0,"λ"),E.push(e),l(`Ecuación para X${c-4}:`),l(Array.from(e.entries()).map((([e,t])=>0!==e?`${t}X${e}`:t)).join(" + ")+"\n")}c++}return g.add(0),h(E[0],0,y,E,0,g,m),l("Expresión Regular:"),l(function(e,t){let r=`X${t}:\n`;for(let[t,n]of e.entries())r+=`${t} => ${n}\n`;return r}(E[0],0)),i}export{w as DataFiles};
